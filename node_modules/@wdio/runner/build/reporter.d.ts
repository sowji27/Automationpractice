/// <reference types="node" />
import type { ConfigOptions, Capability } from '@wdio/config';
import type { EventEmitter } from 'events';
interface Reporter extends EventEmitter {
    isSynchronised: boolean;
}
export default class BaseReporter {
    private _config;
    private _cid;
    caps: Capability;
    private _reporterSyncInterval;
    private _reporterSyncTimeout;
    private _reporters;
    constructor(_config: ConfigOptions, _cid: string, caps: Capability);
    emit(e: string, payload: any): void;
    getLogFile(name: string): string | undefined;
    getWriteStreamObject(reporter: string): {
        write: (content: unknown) => boolean;
    };
    waitForSync(): Promise<unknown>;
    initReporter(reporter: EventEmitter): Reporter;
}
export {};
//# sourceMappingURL=reporter.d.ts.map