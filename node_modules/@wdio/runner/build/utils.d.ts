/// <reference types="webdriverio/webdriverio-core" />
/// <reference types="webdriverio" />
/// <reference types="@wdio/cucumber-framework" />
import { ConfigOptions, Capability } from '@wdio/config';
export interface ConfigWithSessionId extends Omit<ConfigOptions, 'capabilities'> {
    capabilities?: Capability;
    sessionId?: string;
}
export declare function sanitizeCaps(caps: Capability, filterOut?: boolean): Capability;
export declare function initialiseInstance(config: ConfigWithSessionId, capabilities: Capability, isMultiremote?: boolean): Promise<import("webdriverio").BrowserObject | import("webdriverio").MultiRemoteBrowserObject>;
export declare function filterLogTypes(excludeDriverLogs: string[], driverLogTypes: string[]): string[];
export declare function sendFailureMessage(e: string, payload: any): void;
declare type BrowserData = {
    sessionId: string;
    isW3C: boolean;
    protocol: string;
    hostname: string;
    port: number;
    path: string;
    queryParams: Record<string, string>;
};
export declare function getInstancesData(browser: WebdriverIO.BrowserObject | WebdriverIO.MultiRemoteBrowserObject, isMultiremote: boolean): Record<string, Partial<BrowserData>> | undefined;
export {};
//# sourceMappingURL=utils.d.ts.map