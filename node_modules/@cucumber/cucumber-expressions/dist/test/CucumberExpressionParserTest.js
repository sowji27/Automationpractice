"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
// eslint-disable-next-line node/no-extraneous-import
var js_yaml_1 = __importDefault(require("js-yaml")); // why?
var assert_1 = __importDefault(require("assert"));
var Errors_1 = require("../src/Errors");
var CucumberExpressionParser_1 = __importDefault(require("../src/CucumberExpressionParser"));
describe('Cucumber expression parser', function () {
    fs_1.default.readdirSync('testdata/ast').forEach(function (testcase) {
        var testCaseData = fs_1.default.readFileSync("testdata/ast/" + testcase, 'utf-8');
        var expectation = js_yaml_1.default.safeLoad(testCaseData);
        it("" + testcase, function () {
            var parser = new CucumberExpressionParser_1.default();
            if (expectation.exception == undefined) {
                var node = parser.parse(expectation.expression);
                assert_1.default.deepStrictEqual(JSON.parse(JSON.stringify(node)), // Removes type information.
                JSON.parse(expectation.expected));
            }
            else {
                assert_1.default.throws(function () {
                    parser.parse(expectation.expression);
                }, new Errors_1.CucumberExpressionError(expectation.exception));
            }
        });
    });
});
//# sourceMappingURL=CucumberExpressionParserTest.js.map