import { messages } from '@cucumber/messages';
export interface IFilters {
    acceptScenario?: (scenario: messages.GherkinDocument.Feature.IScenario) => boolean;
    acceptStep?: (step: messages.GherkinDocument.Feature.IStep) => boolean;
    acceptBackground?: (background: messages.GherkinDocument.Feature.IBackground) => boolean;
    acceptRule?: (rule: messages.GherkinDocument.Feature.FeatureChild.IRule) => boolean;
    acceptFeature?: (feature: messages.GherkinDocument.IFeature) => boolean;
}
export interface IHandlers {
    handleStep?: (step: messages.GherkinDocument.Feature.IStep) => void;
    handleScenario?: (scenario: messages.GherkinDocument.Feature.IScenario) => void;
    handleBackground?: (background: messages.GherkinDocument.Feature.IBackground) => void;
    handleRule?: (rule: messages.GherkinDocument.Feature.FeatureChild.IRule) => void;
    handleFeature?: (feature: messages.GherkinDocument.IFeature) => void;
}
export declare const rejectAllFilters: IFilters;
export default class GherkinDocumentWalker {
    private readonly filters;
    private readonly handlers;
    constructor(filters?: IFilters, handlers?: IHandlers);
    walkGherkinDocument(gherkinDocument: messages.IGherkinDocument): messages.IGherkinDocument;
    protected walkFeature(feature: messages.GherkinDocument.IFeature): messages.GherkinDocument.IFeature;
    private copyFeature;
    private copyTags;
    private filterFeatureChildren;
    private walkFeatureChildren;
    protected walkRule(rule: messages.GherkinDocument.Feature.FeatureChild.IRule): messages.GherkinDocument.Feature.FeatureChild.IRule;
    private copyRule;
    private filterRuleChildren;
    private walkRuleChildren;
    protected walkBackground(background: messages.GherkinDocument.Feature.IBackground): messages.GherkinDocument.Feature.IBackground;
    private copyBackground;
    protected walkScenario(scenario: messages.GherkinDocument.Feature.IScenario): messages.GherkinDocument.Feature.IScenario;
    private copyScenario;
    protected walkAllSteps(steps: messages.GherkinDocument.Feature.IStep[]): messages.GherkinDocument.Feature.IStep[];
    protected walkStep(step: messages.GherkinDocument.Feature.IStep): messages.GherkinDocument.Feature.IStep;
    private copyStep;
}
