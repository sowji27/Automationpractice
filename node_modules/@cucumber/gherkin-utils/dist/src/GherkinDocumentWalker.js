"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.rejectAllFilters = void 0;
var messages_1 = require("@cucumber/messages");
var defaultFilters = {
    acceptScenario: function () { return true; },
    acceptStep: function () { return true; },
    acceptBackground: function () { return true; },
    acceptRule: function () { return true; },
    acceptFeature: function () { return true; },
};
exports.rejectAllFilters = {
    acceptScenario: function () { return false; },
    acceptStep: function () { return false; },
    acceptBackground: function () { return false; },
    acceptRule: function () { return false; },
    acceptFeature: function () { return false; },
};
var defaultHandlers = {
    handleStep: function () { return null; },
    handleScenario: function () { return null; },
    handleBackground: function () { return null; },
    handleRule: function () { return null; },
    handleFeature: function () { return null; },
};
var GherkinDocumentWalker = /** @class */ (function () {
    function GherkinDocumentWalker(filters, handlers) {
        this.filters = __assign(__assign({}, defaultFilters), filters);
        this.handlers = __assign(__assign({}, defaultHandlers), handlers);
    }
    GherkinDocumentWalker.prototype.walkGherkinDocument = function (gherkinDocument) {
        if (!gherkinDocument.feature) {
            return null;
        }
        var feature = this.walkFeature(gherkinDocument.feature);
        if (!feature) {
            return null;
        }
        return messages_1.messages.GherkinDocument.create({
            feature: feature,
            comments: gherkinDocument.comments,
            uri: gherkinDocument.uri,
        });
    };
    GherkinDocumentWalker.prototype.walkFeature = function (feature) {
        var _this = this;
        var keptChildren = this.walkFeatureChildren(feature.children);
        this.handlers.handleFeature(feature);
        var backgroundKept = keptChildren.find(function (child) { return child.background; });
        if (this.filters.acceptFeature(feature) || backgroundKept) {
            return this.copyFeature(feature, feature.children.map(function (child) {
                if (child.background) {
                    return messages_1.messages.GherkinDocument.Feature.FeatureChild.create({
                        background: _this.copyBackground(child.background),
                    });
                }
                if (child.scenario) {
                    return messages_1.messages.GherkinDocument.Feature.FeatureChild.create({
                        scenario: _this.copyScenario(child.scenario),
                    });
                }
                if (child.rule) {
                    return messages_1.messages.GherkinDocument.Feature.FeatureChild.create({
                        rule: _this.copyRule(child.rule, child.rule.children),
                    });
                }
            }));
        }
        if (keptChildren.find(function (child) { return child !== null; })) {
            return this.copyFeature(feature, keptChildren);
        }
    };
    GherkinDocumentWalker.prototype.copyFeature = function (feature, children) {
        return messages_1.messages.GherkinDocument.Feature.create({
            children: this.filterFeatureChildren(feature, children),
            location: feature.location,
            language: feature.language,
            keyword: feature.keyword,
            name: feature.name,
            description: feature.description ? feature.description : undefined,
            tags: this.copyTags(feature.tags),
        });
    };
    GherkinDocumentWalker.prototype.copyTags = function (tags) {
        return tags.map(function (tag) {
            return messages_1.messages.GherkinDocument.Feature.Tag.create({
                name: tag.name,
                id: tag.id,
                location: tag.location,
            });
        });
    };
    GherkinDocumentWalker.prototype.filterFeatureChildren = function (feature, children) {
        var e_1, _a;
        var copyChildren = [];
        var scenariosKeptById = new Map(children
            .filter(function (child) { return child.scenario; })
            .map(function (child) { return [child.scenario.id, child]; }));
        var ruleKeptById = new Map(children
            .filter(function (child) { return child.rule; })
            .map(function (child) { return [child.rule.id, child]; }));
        try {
            for (var _b = __values(feature.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                if (child.background) {
                    copyChildren.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.create({
                        background: this.copyBackground(child.background),
                    }));
                }
                if (child.scenario) {
                    var scenarioCopy = scenariosKeptById.get(child.scenario.id);
                    if (scenarioCopy) {
                        copyChildren.push(scenarioCopy);
                    }
                }
                if (child.rule) {
                    var ruleCopy = ruleKeptById.get(child.rule.id);
                    if (ruleCopy) {
                        copyChildren.push(ruleCopy);
                    }
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return copyChildren;
    };
    GherkinDocumentWalker.prototype.walkFeatureChildren = function (children) {
        var e_2, _a;
        var childrenCopy = [];
        try {
            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
                var child = children_1_1.value;
                var backgroundCopy = null;
                var scenarioCopy = null;
                var ruleCopy = null;
                if (child.background) {
                    backgroundCopy = this.walkBackground(child.background);
                }
                if (child.scenario) {
                    scenarioCopy = this.walkScenario(child.scenario);
                }
                if (child.rule) {
                    ruleCopy = this.walkRule(child.rule);
                }
                if (backgroundCopy || scenarioCopy || ruleCopy) {
                    childrenCopy.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.create({
                        background: backgroundCopy,
                        scenario: scenarioCopy,
                        rule: ruleCopy,
                    }));
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return childrenCopy;
    };
    GherkinDocumentWalker.prototype.walkRule = function (rule) {
        var children = this.walkRuleChildren(rule.children);
        this.handlers.handleRule(rule);
        var backgroundKept = children.find(function (child) { return child !== null && child.background !== null; });
        var scenariosKept = children.filter(function (child) { return child !== null && child.scenario !== null; });
        if (this.filters.acceptRule(rule) || backgroundKept) {
            return this.copyRule(rule, rule.children);
        }
        if (scenariosKept.length > 0) {
            return this.copyRule(rule, scenariosKept);
        }
    };
    GherkinDocumentWalker.prototype.copyRule = function (rule, children) {
        return messages_1.messages.GherkinDocument.Feature.FeatureChild.Rule.create({
            id: rule.id,
            name: rule.name,
            description: rule.description ? rule.description : undefined,
            location: rule.location,
            keyword: rule.keyword,
            children: this.filterRuleChildren(rule.children, children),
        });
    };
    GherkinDocumentWalker.prototype.filterRuleChildren = function (children, childrenKept) {
        var e_3, _a;
        var childrenCopy = [];
        var scenariosKeptIds = childrenKept
            .filter(function (child) { return child.scenario; })
            .map(function (child) { return child.scenario.id; });
        try {
            for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
                var child = children_2_1.value;
                if (child.background) {
                    childrenCopy.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.RuleChild.create({
                        background: this.copyBackground(child.background),
                    }));
                }
                if (child.scenario && scenariosKeptIds.includes(child.scenario.id)) {
                    childrenCopy.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.RuleChild.create({
                        scenario: this.copyScenario(child.scenario),
                    }));
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return childrenCopy;
    };
    GherkinDocumentWalker.prototype.walkRuleChildren = function (children) {
        var e_4, _a;
        var childrenCopy = [];
        try {
            for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {
                var child = children_3_1.value;
                if (child.background) {
                    childrenCopy.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.RuleChild.create({
                        background: this.walkBackground(child.background),
                    }));
                }
                if (child.scenario) {
                    childrenCopy.push(messages_1.messages.GherkinDocument.Feature.FeatureChild.RuleChild.create({
                        scenario: this.walkScenario(child.scenario),
                    }));
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return childrenCopy;
    };
    GherkinDocumentWalker.prototype.walkBackground = function (background) {
        var steps = this.walkAllSteps(background.steps);
        this.handlers.handleBackground(background);
        if (this.filters.acceptBackground(background) ||
            steps.find(function (step) { return step !== null; })) {
            return this.copyBackground(background);
        }
    };
    GherkinDocumentWalker.prototype.copyBackground = function (background) {
        var _this = this;
        return messages_1.messages.GherkinDocument.Feature.Background.create({
            id: background.id,
            name: background.name,
            location: background.location,
            keyword: background.keyword,
            steps: background.steps.map(function (step) { return _this.copyStep(step); }),
            description: background.description ? background.description : undefined,
        });
    };
    GherkinDocumentWalker.prototype.walkScenario = function (scenario) {
        var steps = this.walkAllSteps(scenario.steps);
        this.handlers.handleScenario(scenario);
        if (this.filters.acceptScenario(scenario) ||
            steps.find(function (step) { return step !== null; })) {
            return this.copyScenario(scenario);
        }
    };
    GherkinDocumentWalker.prototype.copyScenario = function (scenario) {
        var _this = this;
        return messages_1.messages.GherkinDocument.Feature.Scenario.create({
            id: scenario.id,
            name: scenario.name,
            description: scenario.description ? scenario.description : undefined,
            location: scenario.location,
            keyword: scenario.keyword,
            examples: scenario.examples,
            steps: scenario.steps.map(function (step) { return _this.copyStep(step); }),
            tags: this.copyTags(scenario.tags),
        });
    };
    GherkinDocumentWalker.prototype.walkAllSteps = function (steps) {
        var _this = this;
        return steps.map(function (step) { return _this.walkStep(step); });
    };
    GherkinDocumentWalker.prototype.walkStep = function (step) {
        this.handlers.handleStep(step);
        if (!this.filters.acceptStep(step)) {
            return null;
        }
        return this.copyStep(step);
    };
    GherkinDocumentWalker.prototype.copyStep = function (step) {
        return messages_1.messages.GherkinDocument.Feature.Step.create({
            id: step.id,
            keyword: step.keyword,
            location: step.location,
            text: step.text,
            dataTable: step.dataTable,
            docString: step.docString,
        });
    };
    return GherkinDocumentWalker;
}());
exports.default = GherkinDocumentWalker;
//# sourceMappingURL=GherkinDocumentWalker.js.map