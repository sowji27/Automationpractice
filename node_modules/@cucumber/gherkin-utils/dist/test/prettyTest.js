"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var parse_1 = __importDefault(require("./parse"));
var pretty_1 = __importDefault(require("../src/pretty"));
describe('PrettyFormatter', function () {
    it('renders a feature with no scenarios', function () {
        assertPrettyIdentical('Feature: hello\n');
    });
    it('renders a feature with two scenarios', function () {
        assertPrettyIdentical("Feature: hello\n\n  Scenario: one\n    Given hello\n\n  Scenario: two\n    Given world\n");
    });
    it('renders a feature with two scenarios in a rule', function () {
        assertPrettyIdentical("Feature: hello\n\n  Rule: ok\n\n    Scenario: one\n      Given hello\n\n    Scenario: two\n      Given world\n");
    });
    it('renders a feature with background and scenario', function () {
        assertPrettyIdentical("Feature: hello\n\n  Background: bbb\n    Given hello\n\n  Scenario: two\n    Given world\n");
    });
    it('renders a rule with background and scenario', function () {
        assertPrettyIdentical("Feature: hello\n\n  Rule: machin\n\n    Background: bbb\n      Given hello\n\n    Scenario: two\n      Given world\n");
    });
    it('renders tags when set', function () {
        assertPrettyIdentical("@featureTag\nFeature: hello\n\n  Rule: machin\n\n    Background: bbb\n      Given hello\n\n    @scenarioTag @secondTag\n    Scenario: two\n      Given world\n");
    });
    it('renders descriptions when set', function () {
        assertPrettyIdentical("Feature: hello\n  So this is a feature\n\n  Rule: machin\n    The first rule of the feature states things\n\n    Background: bbb\n      We can have some explications for the background\n\n      Given hello\n\n    Scenario: two\n      This scenario will do things, maybe\n\n      Given world\n");
    });
});
function assertPrettyIdentical(source) {
    var gherkinDocument = parse_1.default(source);
    assert_1.default.strictEqual(pretty_1.default(gherkinDocument), source);
}
//# sourceMappingURL=prettyTest.js.map