"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const summary_formatter_1 = __importDefault(require("./summary_formatter"));
const status_1 = __importDefault(require("../status"));
const value_checker_1 = require("../value_checker");
const STATUS_CHARACTER_MAPPING = {
    [status_1.default.AMBIGUOUS]: 'A',
    [status_1.default.FAILED]: 'F',
    [status_1.default.PASSED]: '.',
    [status_1.default.PENDING]: 'P',
    [status_1.default.SKIPPED]: '-',
    [status_1.default.UNDEFINED]: 'U',
};
class ProgressFormatter extends summary_formatter_1.default {
    constructor(options) {
        options.eventBroadcaster.on('envelope', (envelope) => {
            if (value_checker_1.doesHaveValue(envelope.testRunFinished)) {
                this.log('\n\n');
            }
            else if (value_checker_1.doesHaveValue(envelope.testStepFinished)) {
                this.logProgress(envelope.testStepFinished);
            }
        });
        super(options);
    }
    logProgress({ testStepResult: { status } }) {
        const character = this.colorFns.forStatus(status)(STATUS_CHARACTER_MAPPING[status]);
        this.log(character);
    }
}
exports.default = ProgressFormatter;
//# sourceMappingURL=progress_formatter.js.map