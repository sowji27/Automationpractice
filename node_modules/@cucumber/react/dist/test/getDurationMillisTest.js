"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var messages_1 = require("@cucumber/messages");
var assert_1 = __importDefault(require("assert"));
var getDurationMillis_1 = __importDefault(require("../src/getDurationMillis"));
describe('getDurationMillis', function () {
    it('returns undefined when one or both or messages are missing', function () {
        var started = messages_1.messages.TestRunStarted.create();
        var ended = messages_1.messages.TestRunStarted.create();
        assert_1.default.strictEqual(getDurationMillis_1.default(started, undefined), undefined);
        assert_1.default.strictEqual(getDurationMillis_1.default(undefined, ended), undefined);
        assert_1.default.strictEqual(getDurationMillis_1.default(undefined, undefined), undefined);
    });
    it('computes the number of millis seconds between the start and end of the run', function () {
        var started = messages_1.messages.TestRunStarted.create({
            timestamp: messages_1.messages.Timestamp.create({ seconds: 12 }),
        });
        var ended = messages_1.messages.TestRunStarted.create({
            timestamp: messages_1.messages.Timestamp.create({ seconds: 14 }),
        });
        assert_1.default.strictEqual(getDurationMillis_1.default(started, ended), 2000);
    });
    it('no precision is provided', function () {
        var started = messages_1.messages.TestRunStarted.create({
            timestamp: messages_1.messages.Timestamp.create({ seconds: 12, nanos: 123456789 }),
        });
        var ended = messages_1.messages.TestRunStarted.create({
            timestamp: messages_1.messages.Timestamp.create({ seconds: 14, nanos: 234567890 }),
        });
        assert_1.default.strictEqual(getDurationMillis_1.default(started, ended), 2111.1111010000004);
    });
});
//# sourceMappingURL=getDurationMillisTest.js.map