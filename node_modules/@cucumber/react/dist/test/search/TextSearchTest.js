"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var TextSearch_1 = __importDefault(require("../../src/search/TextSearch"));
var gherkin_utils_1 = require("@cucumber/gherkin-utils");
var messages_1 = require("@cucumber/messages");
var gherkin_1 = require("@cucumber/gherkin");
describe('TextSearch', function () {
    var search;
    var source = "Feature: Continents\n\n  Background: World\n    Given the world exists\n\n  Scenario: Europe\n    Given France\n    When Spain\n    Then The Netherlands\n\n  Scenario: America\n    Given Mexico\n    Then Brazil\n\n  Scenario: Africa\n    Given Ethiopia\n\n  Rule: uninhabited continents\n\n    Scenario: Antartica\n      Given some scientific bases\n";
    beforeEach(function () {
        var gherkinDocument = parse(source);
        search = new TextSearch_1.default();
        search.add(gherkinDocument);
    });
    context('Hit found in step', function () {
        it('displays just one scenario', function () {
            var searchResults = search.search('Spain');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), "Feature: Continents\n\n  Background: World\n    Given the world exists\n\n  Scenario: Europe\n    Given France\n    When Spain\n    Then The Netherlands\n");
        });
    });
    context('Hit found in scenario', function () {
        it('displays just one scenario', function () {
            var searchResults = search.search('europe');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), "Feature: Continents\n\n  Background: World\n    Given the world exists\n\n  Scenario: Europe\n    Given France\n    When Spain\n    Then The Netherlands\n");
        });
        it('displays just one scenario', function () {
            var searchResults = search.search('europe');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), "Feature: Continents\n\n  Background: World\n    Given the world exists\n\n  Scenario: Europe\n    Given France\n    When Spain\n    Then The Netherlands\n");
        });
    });
    context('Hit found in background', function () {
        it('displays all scenarios', function () {
            var searchResults = search.search('world');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), source);
        });
        it('finds hits in background steps', function () {
            var searchResults = search.search('exists');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), source);
        });
    });
    context('Hit found in rule', function () {
        it('displays a rule', function () {
            var searchResults = search.search('uninhabited');
            assert_1.default.deepStrictEqual(gherkin_utils_1.pretty(searchResults[0]), "Feature: Continents\n\n  Background: World\n    Given the world exists\n\n  Rule: uninhabited continents\n\n    Scenario: Antartica\n      Given some scientific bases\n");
        });
    });
    context('No hit found', function () {
        it('returns no hits', function () {
            var searchResults = search.search('saturn');
            assert_1.default.deepStrictEqual(searchResults, []);
        });
    });
});
function parse(source) {
    var newId = messages_1.IdGenerator.uuid();
    var parser = new gherkin_1.Parser(new gherkin_1.AstBuilder(newId));
    var gherkinDocument = parser.parse(source);
    gherkinDocument.uri = '';
    return gherkinDocument;
}
//# sourceMappingURL=TextSearchTest.js.map