"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var messages_1 = require("@cucumber/messages");
var query_1 = require("@cucumber/query");
var gherkin_utils_1 = require("@cucumber/gherkin-utils");
var fs_1 = __importDefault(require("fs"));
var getFeatureStatus_1 = __importDefault(require("../src/getFeatureStatus"));
function envelopesFrom(path) {
    return fs_1.default
        .readFileSync(__dirname + '/' + path)
        .toString()
        .trim()
        .split('\n')
        .map(function (json) { return messages_1.messages.Envelope.fromObject(JSON.parse(json)); });
}
function getGherkinDocument(envelopes) {
    return envelopes.find(function (envelope) { return envelope.gherkinDocument; }).gherkinDocument;
}
describe('getFeatureStatus', function () {
    var testResultsQuery;
    var gherkinQuery;
    beforeEach(function () {
        testResultsQuery = new query_1.Query();
        gherkinQuery = new gherkin_utils_1.Query();
    });
    function readEnvelopes(envelopes) {
        envelopes.map(function (envelope) {
            gherkinQuery.update(envelope);
            testResultsQuery.update(envelope);
        });
    }
    it('returns PASSED for a feature where all scenarios passed', function () {
        var envelopes = envelopesFrom('../../../compatibility-kit/javascript/features/minimal/minimal.ndjson');
        var document = getGherkinDocument(envelopes);
        readEnvelopes(envelopes);
        assert_1.default.strictEqual(getFeatureStatus_1.default(document, testResultsQuery, gherkinQuery), messages_1.messages.TestStepFinished.TestStepResult.Status.PASSED);
    });
    it('returns the worst status for a feature with multiple scenarios', function () {
        var envelopes = envelopesFrom('../../../compatibility-kit/javascript/features/stack-traces/stack-traces.ndjson');
        var document = getGherkinDocument(envelopes);
        readEnvelopes(envelopes);
        assert_1.default.strictEqual(getFeatureStatus_1.default(document, testResultsQuery, gherkinQuery), messages_1.messages.TestStepFinished.TestStepResult.Status.FAILED);
    });
});
//# sourceMappingURL=getFeatureStatusTest.js.map