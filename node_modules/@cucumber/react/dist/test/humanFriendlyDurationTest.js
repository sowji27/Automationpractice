"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assert_1 = __importDefault(require("assert"));
var humanFriendlyDuration_1 = __importDefault(require("../src/humanFriendlyDuration"));
describe('humanFriendlyDuration', function () {
    context('sub-seconds', function () {
        it('only sets the millis field', function () {
            var result = humanFriendlyDuration_1.default(123);
            assert_1.default.strictEqual(result.millis, 123);
            assert_1.default.strictEqual(result.seconds, undefined);
            assert_1.default.strictEqual(result.minutes, undefined);
            assert_1.default.strictEqual(result.hours, undefined);
            assert_1.default.strictEqual(result.days, undefined);
        });
        it('has a default precision of 2', function () {
            var result = humanFriendlyDuration_1.default(123.45678);
            assert_1.default.strictEqual(result.millis, 123.46);
        });
    });
    context('sub-minutes', function () {
        it('only sets the seconds', function () {
            var result = humanFriendlyDuration_1.default(1034);
            assert_1.default.strictEqual(result.millis, undefined);
            assert_1.default.strictEqual(result.seconds, 1.034);
            assert_1.default.strictEqual(result.minutes, undefined);
            assert_1.default.strictEqual(result.hours, undefined);
            assert_1.default.strictEqual(result.days, undefined);
        });
    });
    context('sub-hours', function () {
        it('only sets the minutes and seconds field', function () {
            var result = humanFriendlyDuration_1.default(123456);
            assert_1.default.strictEqual(result.millis, undefined);
            assert_1.default.strictEqual(result.seconds, 3.456);
            assert_1.default.strictEqual(result.minutes, 2);
            assert_1.default.strictEqual(result.hours, undefined);
            assert_1.default.strictEqual(result.days, undefined);
        });
    });
    context('sub-days', function () {
        it('only sets the hours, minutes and seconds field', function () {
            var result = humanFriendlyDuration_1.default(3661123);
            assert_1.default.strictEqual(result.millis, undefined);
            assert_1.default.strictEqual(result.seconds, 1.123);
            assert_1.default.strictEqual(result.minutes, 1);
            assert_1.default.strictEqual(result.hours, 1);
            assert_1.default.strictEqual(result.days, undefined);
        });
    });
    context('days and more', function () {
        it('only sets the hours, minutes and seconds field', function () {
            var result = humanFriendlyDuration_1.default((25 * 3600 + 61) * 1000 + 111);
            assert_1.default.strictEqual(result.millis, undefined);
            assert_1.default.strictEqual(result.seconds, 1.111);
            assert_1.default.strictEqual(result.minutes, 1);
            assert_1.default.strictEqual(result.hours, 1);
            assert_1.default.strictEqual(result.days, 1);
        });
    });
});
//# sourceMappingURL=humanFriendlyDurationTest.js.map