"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var Tags_1 = __importDefault(require("./Tags"));
var Description_1 = __importDefault(require("./Description"));
var Examples_1 = __importDefault(require("./Examples"));
var StepList_1 = __importDefault(require("./StepList"));
var HookList_1 = __importDefault(require("./HookList"));
var IdGenerator_1 = __importDefault(require("../../IdGenerator"));
var ScenarioTitle_1 = __importDefault(require("./ScenarioTitle"));
var CucumberQueryContext_1 = __importDefault(require("../../CucumberQueryContext"));
var GherkinQueryContext_1 = __importDefault(require("../../GherkinQueryContext"));
var UriContext_1 = __importDefault(require("../../UriContext"));
var generator = new IdGenerator_1.default();
var Scenario = function (_a) {
    var scenario = _a.scenario;
    var examplesList = scenario.examples || [];
    var hasExamples = examplesList.length > 0;
    var idGenerated = generator.generate(scenario.name);
    var cucumberQuery = react_1.default.useContext(CucumberQueryContext_1.default);
    var gherkinQuery = react_1.default.useContext(GherkinQueryContext_1.default);
    var uri = react_1.default.useContext(UriContext_1.default);
    var pickleIds = gherkinQuery.getPickleIds(uri, scenario.id);
    var beforeHooks = cucumberQuery.getBeforeHookSteps(pickleIds[0]);
    var afterHooks = cucumberQuery.getAfterHookSteps(pickleIds[0]);
    return (react_1.default.createElement("section", { className: "cucumber-scenario" },
        react_1.default.createElement(Tags_1.default, { tags: scenario.tags }),
        react_1.default.createElement(ScenarioTitle_1.default, { id: idGenerated, scenario: scenario }),
        react_1.default.createElement(Description_1.default, { description: scenario.description }),
        react_1.default.createElement(HookList_1.default, { hookSteps: beforeHooks }),
        react_1.default.createElement(StepList_1.default, { steps: scenario.steps || [], renderStepMatchArguments: !hasExamples, renderMessage: !hasExamples }),
        react_1.default.createElement(HookList_1.default, { hookSteps: afterHooks }),
        examplesList.map(function (examples, index) { return (react_1.default.createElement(Examples_1.default, { key: index, examples: examples })); })));
};
exports.default = Scenario;
//# sourceMappingURL=Scenario.js.map