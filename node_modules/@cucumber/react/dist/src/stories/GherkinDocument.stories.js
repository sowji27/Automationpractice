"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnknownParameterTypes = exports.StackTraces = exports.Rules = exports.ParameterTypes = exports.Minimal = exports.Hooks = exports.ExamplesTables = exports.DataTables = exports.Attachments = void 0;
var react_1 = __importDefault(require("react"));
var query_1 = require("@cucumber/query");
var gherkin_utils_1 = require("@cucumber/gherkin-utils");
var GherkinDocumentList_1 = __importDefault(require("../components/app/GherkinDocumentList"));
var QueriesWrapper_1 = __importDefault(require("../components/app/QueriesWrapper"));
var EnvelopesQueryContext_1 = require("../EnvelopesQueryContext");
var GherkinDocument_1 = __importDefault(require("../components/gherkin/GherkinDocument"));
require("../styles/react-accessible-accordion.css");
require("../styles/styles.scss");
var attachments_1 = __importDefault(require("../../acceptance/attachments/attachments"));
var data_tables_1 = __importDefault(require("../../acceptance/data-tables/data-tables"));
var examples_tables_1 = __importDefault(require("../../acceptance/examples-tables/examples-tables"));
var hooks_1 = __importDefault(require("../../acceptance/hooks/hooks"));
var minimal_1 = __importDefault(require("../../acceptance/minimal/minimal"));
var parameter_types_1 = __importDefault(require("../../acceptance/parameter-types/parameter-types"));
var rules_1 = __importDefault(require("../../acceptance/rules/rules"));
var stack_traces_1 = __importDefault(require("../../acceptance/stack-traces/stack-traces"));
var unknown_parameter_type_1 = __importDefault(require("../../acceptance/unknown-parameter-type/unknown-parameter-type"));
exports.default = {
    title: 'GherkinDocument',
    component: GherkinDocument_1.default,
    argTypes: {
        backgroundColor: { control: 'color' },
    },
};
var Template = function (_a) {
    var envelopes = _a.envelopes;
    return (react_1.default.createElement(QueriesWrapper_1.default, __assign({}, props(envelopes)),
        react_1.default.createElement(GherkinDocumentList_1.default, null)));
};
exports.Attachments = Template.bind({});
exports.Attachments.args = {
    envelopes: attachments_1.default,
};
exports.DataTables = Template.bind({});
exports.DataTables.args = {
    envelopes: data_tables_1.default,
};
exports.ExamplesTables = Template.bind({});
exports.ExamplesTables.args = {
    envelopes: examples_tables_1.default,
};
exports.Hooks = Template.bind({});
exports.Hooks.args = {
    envelopes: hooks_1.default,
};
exports.Minimal = Template.bind({});
exports.Minimal.args = {
    envelopes: minimal_1.default,
};
exports.ParameterTypes = Template.bind({});
exports.ParameterTypes.args = {
    envelopes: parameter_types_1.default,
};
exports.Rules = Template.bind({});
exports.Rules.args = {
    envelopes: rules_1.default,
};
exports.StackTraces = Template.bind({});
exports.StackTraces.args = {
    envelopes: stack_traces_1.default,
};
exports.UnknownParameterTypes = Template.bind({});
exports.UnknownParameterTypes.args = {
    envelopes: unknown_parameter_type_1.default,
};
function props(envelopes) {
    var e_1, _a;
    var gherkinQuery = new gherkin_utils_1.Query();
    var cucumberQuery = new query_1.Query();
    var envelopesQuery = new EnvelopesQueryContext_1.EnvelopesQuery();
    try {
        for (var envelopes_1 = __values(envelopes), envelopes_1_1 = envelopes_1.next(); !envelopes_1_1.done; envelopes_1_1 = envelopes_1.next()) {
            var envelope = envelopes_1_1.value;
            gherkinQuery.update(envelope);
            cucumberQuery.update(envelope);
            envelopesQuery.update(envelope);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (envelopes_1_1 && !envelopes_1_1.done && (_a = envelopes_1.return)) _a.call(envelopes_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return { gherkinQuery: gherkinQuery, cucumberQuery: cucumberQuery, envelopesQuery: envelopesQuery };
}
//# sourceMappingURL=GherkinDocument.stories.js.map