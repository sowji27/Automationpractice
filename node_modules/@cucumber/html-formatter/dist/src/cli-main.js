"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var messages_1 = require("@cucumber/messages");
var commander_1 = __importDefault(require("commander"));
var package_json_1 = __importDefault(require("../package.json"));
var resolve_pkg_1 = __importDefault(require("resolve-pkg"));
var stream_1 = require("stream");
var CucumberHtmlStream_1 = __importDefault(require("./CucumberHtmlStream"));
commander_1.default.version(package_json_1.default.version);
commander_1.default.option('-f, --format <format>', 'output format: ndjson|protobuf', 'protobuf');
commander_1.default.parse(process.argv);
var toMessageStream = commander_1.default.format === 'ndjson'
    ? new messages_1.NdjsonToMessageStream(messages_1.messages.Envelope.fromObject.bind(messages_1.messages.Envelope))
    : new messages_1.BinaryToMessageStream(messages_1.messages.Envelope.decodeDelimited.bind(messages_1.messages.Envelope));
stream_1.pipeline(process.stdin, toMessageStream, new CucumberHtmlStream_1.default(resolve_pkg_1.default('@cucumber/react', { cwd: __dirname }) +
    '/dist/src/styles/cucumber-react.css', __dirname + '/../../dist/main.js'), process.stdout, function (err) {
    if (err) {
        // tslint:disable-next-line:no-console
        console.error(err);
        process.exit(1);
    }
});
//# sourceMappingURL=cli-main.js.map